- 비동기 코드란?
동기의 반댓말로, 실제 코딩한 순서와 다르게 실행되는 것이다.(Ex. 이벤트리스너)

- 피셔 에이츠 셔플?
기존의 배열에서 배열의 전부를 섞은 후에 새로운 배열을 만들어 내는 것(무작위로 섞는 방법)

- while vs for
조건이 간단하면 while문이 편하고, 복잡하면 for문이 편하다. 그리고 while은 몇 번 반복해야 할지 감이 안 올때 사용하면 좋다.
식 마지막에 증감이 일어나면 for쓰는게 낫다(ex. i++, i--)

배열.slice(0,6) : 0번째부터 6까지(미포함)(0,1,2,3,4,5) 짜른다. (원본 배열은 바뀌지 않는다.(map도 원본을 빠꾸지 않음))
배열.sort( () => {} ) : 정렬한다. (원본을 바꾼다. 따라서 원본을 유지하고 싶으면 slice를 이용해서 사용하면 된다.) 

- var VS let?
변수는 scope(범위)를 가진다. var은 함수 스코프를 가지고, let은 블록 스코프를 가진다. 만약 함수 b안애서 변수 a를 선언했다면 함수 밖에서 a를 사용하면 에러가 발생한다. 이렇게 함수를 경계로 접근 여부가 달라지는 것을 함수 스코프라고 한다. 즉 var은 함수가 아닌 if나 for문과 같은 다른 블록으로 감싸져 있다면 접근 가능하다. 그래서 사용하지 않는다.(대부분의 언어의 변수들은 블록 스코프를 가진다.)

- 함수와 함수 밖에 있는 변수를 '클로저'라고 부르고, 클로저와 var이 만나면 문제를 발생 시킬 수 있다.(var은 함수 스코프를 가지기 때문이다.)

- 이미지 스프라이트
가위바위보 게임을 만들 때, 가위바위보 이미지가 3개로 나눠진 것이 아니라 한 개의 이미지로 되어있다. 이렇게 하면 서버에 한 번만 요청하면 된다. 이것을 이미지 스프라이트(Image sprite)라고 한다.

- clearInterval(), clearTimeout()
각각 setInterval()과 setTimeout()을 취소할 수 있다. 인수로는 setInterval()과 setTimeout()의 반환값이 들어간다.

- removeEventListener()
이벤트를 삭제해준다. 하지만 고차함수를 예를 들면 fun(1) === fun(1)은 다르다.(객체끼리는 동일한 값을 가지지않는다.)따라서, 이벤트가 삭제되지 않는 경우가 있으므로 이벤트를멈출때는 flag를 만들어서 true, false값으로 이벤트를 정지시키는 것이 좋다.

- diff = '고양이' || diff = '사자' || diff = '강아지' || diff = '거북이' 라고쓰면 가로로 너무 코드가 길어지기 때문에
['고양이','사자','강아지','거북이'].includes(diff)라고 쓰면 코드를 줄일 수 있다.

- 태그.classList.contains('클래스')
해당 클래스가 들어 있다면 true, 들어있지 않다면 false가 된다.

- add, replace, remove
classList뒤에 메서드로 각각 추가, 수정, 제거 역할을 수행한다.

- new Date()
시각 지정(년,월,일,시,분,초) (월자리는 인덱스가 들어간다. ex.3월은 2)

-[1,2,3,4].reduce((a,c) => a+c, 초기값)
초기값 두 번째 인자(없으면 첫 번째 인수 들어감), 다 더한 후 return 값 10 이것을 length로 나누면 평균이 된다.
a : 누적값(초기값), c : 새로운 누적값
 